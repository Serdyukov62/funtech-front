{
  "version": 3,
  "sources": ["../../../app/routes/signup/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signup\\\\\\\\index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signup\\\\index.tsx\");\n  import.meta.hot.lastModified = \"1712313904276.0107\";\n}\n// REMIX HMR END\n\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { redirect } from '@remix-run/node';\nimport { Form, json, useNavigate } from '@remix-run/react';\nimport { inputSignUpFormLabels, signUpSchema } from 'contracts/sign/sign';\nimport { getValidatedFormData, useRemixForm } from 'remix-hook-form';\nconst resolver = zodResolver(signUpSchema);\nexport const action = async ({\n  request\n}) => {\n  const {\n    errors,\n    data,\n    receivedValues: defaultValues\n  } = await getValidatedFormData(request, resolver);\n  if (errors) {\n    // The keys \"errors\" and \"defaultValue\" are picked up automatically by useRemixForm\n    return json({\n      errors,\n      defaultValues\n    });\n  }\n\n  // Do something with the data\n  console.log(data);\n  // TODO : \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044F + \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u043A\u0443\u043A\u0438 \u0441 \u0442\u043E\u043A\u0435\u043D\u043E\u043C\n  return redirect(\"/anketa\");\n};\nexport default function SignUp() {\n  _s();\n  const navigation = useNavigate();\n  const {\n    register,\n    formState: {\n      isSubmitting,\n      errors\n    }\n  } = useRemixForm({\n    resolver,\n    mode: 'onBlur'\n  });\n  const FormInput = ({\n    name,\n    type\n  }) => <label>\r\n      {inputSignUpFormLabels[name]}\r\n      <input type={type} {...register(name)} />\r\n      {errors[name] && <p>{`${errors[name]?.message}`}</p>}\r\n    </label>;\n  return <Form method=\"POST\">\r\n      <FormInput name=\"email\" type=\"email\" />\r\n      <FormInput name=\"password\" type=\"password\" />\r\n      <FormInput name=\"confirmPassword\" type=\"password\" />\r\n      <button type=\"submit\" disabled={isSubmitting}>\r\n        \u0413\u043E\u0442\u043E\u0432\u043E\r\n      </button>\r\n      <button type=\"button\" onClick={() => navigation(-1)}>\r\n        \u041D\u0430\u0437\u0430\u0434\r\n      </button>\r\n    </Form>;\n}\n_s(SignUp, \"jPrfFg8gMf17aDGenvQWhtzhtlI=\", false, function () {\n  return [useNavigate, useRemixForm];\n});\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAyB;AA4CnB;AAjEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2CAA6C,EAAE;AAAA,EACxF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,WAAW,EAAY,YAAY;AAsB1B,SAAR,SAA0B;AAC/B,KAAG;AACH,QAAM,aAAa,YAAY;AAC/B,QAAM;AAAA,IACJ;AAAA,IACA,WAAW;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,EACF,IAAI,aAAa;AAAA,IACf;AAAA,IACA,MAAM;AAAA,EACR,CAAC;AACD,QAAM,YAAY,CAAC;AAAA,IACjB;AAAA,IACA;AAAA,EACF,MAAM,mDAAC,WACF;AAAA,0BAAsB,IAAI;AAAA,IAC3B,mDAAC,WAAM,MAAa,GAAG,SAAS,IAAI,KAApC;AAAA;AAAA;AAAA;AAAA,WAAuC;AAAA,IACtC,OAAO,IAAI,KAAK,mDAAC,OAAG,aAAG,OAAO,IAAI,GAAG,aAArB;AAAA;AAAA;AAAA;AAAA,WAA+B;AAAA,OAH9C;AAAA;AAAA;AAAA;AAAA,SAIJ;AACF,SAAO,mDAAC,QAAK,QAAO,QAChB;AAAA,uDAAC,aAAU,MAAK,SAAQ,MAAK,WAA7B;AAAA;AAAA;AAAA;AAAA,WAAqC;AAAA,IACrC,mDAAC,aAAU,MAAK,YAAW,MAAK,cAAhC;AAAA;AAAA;AAAA;AAAA,WAA2C;AAAA,IAC3C,mDAAC,aAAU,MAAK,mBAAkB,MAAK,cAAvC;AAAA;AAAA;AAAA;AAAA,WAAkD;AAAA,IAClD,mDAAC,YAAO,MAAK,UAAS,UAAU,cAAc,oDAA9C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,YAAO,MAAK,UAAS,SAAS,MAAM,WAAW,EAAE,GAAG,8CAArD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa,YAAY;AACnC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
